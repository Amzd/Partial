os: osx
osx_image: xcode10.2
language: objective-c

cache:
  bundler: true
  yarn: true
  directories:
    - Carthage

stages:
  - "Test"
  - name: "Deploy"
    if: branch = master AND tag IS present

jobs:
  include:
    - stage: "Test"
      name: "Danger"
      if: type = pull_request
      addons:
        homebrew:
          packages:
            - yarn
            - danger/tap/danger-swift
      install:
        - yarn install
        - swift build --skip-update --configuration release --product swiftlint
        - swift build --skip-update --configuration release --product danger-swift
      script: swift run --skip-update --configuration release danger-swift ci --danger-js-path $(yarn bin danger) --verbose
    - stage: "Test"
      name: "pod lib lint"
      if: type = pull_request
      script: bundle exec pod lib lint
    - stage: "Test"
      name: "Unit tests (iOS, Xcode)"
      if: type != pull_request
      install: carthage bootstrap --platform iOS --cache-builds
      xcode_project: Partial.xcodeproj
      xcode_scheme: Partial-iOS
      xcode_destination: platform=iOS Simulator,OS=12.1,name=iPhone XS
    - stage: "Test"
      name: "Unit tests (macOS, SPM)"
      if: type != pull_request
      install: skip
      script: swift test
    - stage: "Test"
      name: "Unit tests (macOS, Xcode)"
      if: type != pull_request
      install: carthage bootstrap --platform macOS --cache-builds
      xcode_project: Partial.xcodeproj
      xcode_scheme: Partial-macOS
      xcode_destination: platform=macOS
    - stage: "Test"
      name: "Unit tests (tvOS, Xcode)"
      if: type != pull_request
      install: carthage bootstrap --platform tvOS --cache-builds
      xcode_project: Partial.xcodeproj
      xcode_scheme: Partial-tvOS
      xcode_destination: platform=tvOS Simulator,OS=12.1,name=Apple TV 4K
    - stage: "Test"
      name: "Unit tests (linux, SPM)"
      os: linux
      if: type != pull_request
      install: eval "$(curl -sL https://swiftenv.fuller.li/install.sh)"
      script: swift test
    - stage: "Deploy"
      name: "GitHub Release"
      install: skip
      script: skip
      before_deploy: carthage build --archive --platform iOS,macOS,tvOS,watchOS
      deploy:
        provider: releases
        prerelease: true
        api_key: $GITHUB_TOKEN
        file: Partial.framework.zip
        skip_cleanup: true
    - stage: "Deploy"
      name: "CocoaPods release"
      script: skip
      deploy:
        provider: script
        script: bundle exec pod trunk push
