#if !canImport(ObjectiveC)
import XCTest

extension Tests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Tests = [
        ("Partial__wrapping_a_PartialConvertible_type__with_no_values__the_unwrappedValue___function__should_throw_a_missingKey_error", Partial__wrapping_a_PartialConvertible_type__with_no_values__the_unwrappedValue___function__should_throw_a_missingKey_error),
        ("Partial__wrapping_a_PartialConvertible_type__with_all_values__the_unwrappedValue___function__should_not_throw_an_error", Partial__wrapping_a_PartialConvertible_type__with_all_values__the_unwrappedValue___function__should_not_throw_an_error),
        ("Partial__wrapping_a_PartialConvertible_type_with_an_Optional_property__with_the_embedded_value_not_set__the_value_for___function__should_throw_a_missingKey_error", Partial__wrapping_a_PartialConvertible_type_with_an_Optional_property__with_the_embedded_value_not_set__the_value_for___function__should_throw_a_missingKey_error),
        ("Partial__wrapping_a_PartialConvertible_type_with_an_Optional_property__with_the_embedded_value_set_to_nil__the_value_for___function__should_not_throw_an_error", Partial__wrapping_a_PartialConvertible_type_with_an_Optional_property__with_the_embedded_value_set_to_nil__the_value_for___function__should_not_throw_an_error),
        ("Partial__wrapping_a_PartialConvertible_type_with_an_Optional_property__with_the_embedded_value_set_to_nil__the_value_for___function__should_return_nil", Partial__wrapping_a_PartialConvertible_type_with_an_Optional_property__with_the_embedded_value_set_to_nil__the_value_for___function__should_return_nil),
        ("Partial__wrapping_a_PartialConvertible_type_with_a_PartialConvertible_property__with_the_embedded_value_set_via_the_subscript__the_unwrappedValue___function__should_not_throw_an_error", Partial__wrapping_a_PartialConvertible_type_with_a_PartialConvertible_property__with_the_embedded_value_set_via_the_subscript__the_unwrappedValue___function__should_not_throw_an_error),
        ("Partial__wrapping_a_PartialConvertible_type_with_a_PartialConvertible_property__with_the_embedded_value_set_via_the_subscript__then_set_to_nil__the_unwrappedValue___function__should_throw_missingKey_error", Partial__wrapping_a_PartialConvertible_type_with_a_PartialConvertible_property__with_the_embedded_value_set_via_the_subscript__then_set_to_nil__the_unwrappedValue___function__should_throw_missingKey_error),
        ("Partial__wrapping_a_PartialConvertible_type_with_a_PartialConvertible_property__with_the_embedded_value_set_via_the_subscript__then_removed_via_removeValue_for____the_unwrappedValue___function__should_throw_missingKey_error", Partial__wrapping_a_PartialConvertible_type_with_a_PartialConvertible_property__with_the_embedded_value_set_via_the_subscript__then_removed_via_removeValue_for____the_unwrappedValue___function__should_throw_missingKey_error),
            #if swift(>=5.1)
        ("Partial__wrapping_a_PartialConvertible_type_with_an_Optional_property__with_the_embedded_value_set_to__test__via_the_dynamic_member_lookup__the_value_for___function__should_not_throw_an_error", Partial__wrapping_a_PartialConvertible_type_with_an_Optional_property__with_the_embedded_value_set_to__test__via_the_dynamic_member_lookup__the_value_for___function__should_not_throw_an_error),
        ("Partial__wrapping_a_PartialConvertible_type_with_an_Optional_property__with_the_embedded_value_set_to__test__via_the_dynamic_member_lookup__the_value_for___function__should_return__test_", Partial__wrapping_a_PartialConvertible_type_with_an_Optional_property__with_the_embedded_value_set_to__test__via_the_dynamic_member_lookup__the_value_for___function__should_return__test_),
        ("Partial__wrapping_a_PartialConvertible_type_with_an_Optional_property__with_the_embedded_value_set_to__test__via_the_dynamic_member_lookup__accessing_the_value_via_the_dynamic_member_lookup__should_return__test_", Partial__wrapping_a_PartialConvertible_type_with_an_Optional_property__with_the_embedded_value_set_to__test__via_the_dynamic_member_lookup__accessing_the_value_via_the_dynamic_member_lookup__should_return__test_),
            #endif
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(Tests.__allTests__Tests),
    ]
}
#endif
